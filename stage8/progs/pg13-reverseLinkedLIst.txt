type
  List
  {
    int data;
    List next;
  }
endtype

decl
    List head,revHead,reverse(List head, int len);
enddecl

List reverse(List head, int len){
    decl
        List l,temp;
    enddecl
    begin
        if(len == 1)then
            revHead = head;
            return head;
        endif;
        
        l = reverse(head.next,len-1);
        l.next = head;
        l = l.next;
        return l;
    end
}

int main()
{
  decl
    int length,len2, x;
    List p, q;
  enddecl

  begin
    initialize();

    head=null;
    read(length);
    len2=length;

    q=head;
    while (length!=0)  do
      read(x);
      p=alloc();
      p.data=x;
      p.next=null;

      if (head==null) then
      head=p;
      q=p;
      else
      q.next=p;
      q=q.next;
      endif;

      length=length-1;
    endwhile;

    revHead = null;
    reverse(head,len2);

    p=revHead;
    while(len2!=0)  do
      write(p.data);
      p=p.next;
      len2 = len2-1;
    endwhile;

    return 1;
  end
}